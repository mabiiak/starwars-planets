{"version":3,"sources":["context/Provider.js","services/Fetch.js","components/Style.js","components/Table.js","components/Header.js","components/Form-Input.js","App.js","index.js"],"names":["Context","createContext","Provider","children","useState","planets","setPlanets","name","setName","column","setColumn","comparison","setComparison","value","setValue","listFilter","addAllFilter","allState","filterByName","handleChange","valor","target","filterByNumericValues","handleFilter","nome","url","a","fetch","response","json","teste","TableStyled","styled","table","Title","div","Input","input","FilterLine","LineFilter","Table","useContext","filtro","useEffect","planetsFetch","then","results","filter","plan","toLowerCase","includes","map","planet","key","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","Header","FormInput","options","attOptions","data-testid","placeholder","onChange","opt","type","onClick","push","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd4d4eb6.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Context = createContext();\n\nfunction Provider({ children }) {\n  const [planets, setPlanets] = useState([]);\n  const [name, setName] = useState('');\n\n  const [column, setColumn] = useState('population');\n  const [comparison, setComparison] = useState('maior que');\n  const [value, setValue] = useState(0);\n\n  const [listFilter, addAllFilter] = useState([]);\n\n  const handleChange = ({ target }) => {\n    const { value: valor } = target;\n    setName(valor);\n\n    // setPlanets(planets\n    //   .filter((plan) => plan.name.toLowerCase().includes(name.toLowerCase())));\n  };\n\n  const handleFilter = ({ target }) => {\n    const { name: nome, value: valor } = target;\n    if (nome === 'column') setColumn(valor);\n    if (nome === 'numero') setValue(valor);\n    if (nome === 'comparison') setComparison(valor);\n  };\n\n  const allState = {\n    planets,\n    setPlanets,\n    filterByName: {\n      name,\n    },\n    handleChange,\n\n    filterByNumericValues: [\n      {\n        column,\n        comparison,\n        value,\n      },\n    ],\n    setColumn,\n    setValue,\n    setComparison,\n    handleFilter,\n\n    listFilter,\n    addAllFilter,\n  };\n\n  return (\n    <Context.Provider value={ allState }>\n      { children }\n    </Context.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.string.isRequired,\n};\n\nexport default Provider;\n","const url = 'https://swapi-trybe.herokuapp.com/api/planets/';\n\nexport default async function planetsFetch() {\n  const response = await fetch(url);\n  const teste = await response.json();\n  // console.log(teste);\n  return teste;\n}\n","import styled from 'styled-components';\n\nexport const TableStyled = styled.table`\n  display: flexbox;\n  flex-wrap: wrap;\n  margin-top: 25px;\n  border-spacing: 0;\n\n  th, td {\n    align-content: center;\n    // background-color: #090014;\n    color: white;\n    padding: 10px\n  };\n\n  th {\n    font-size: 20px;\n    font-family: 'Staatliches', cursive;\n  }\n\n  td, th {\n    border-bottom: solid 0.5px white;\n  }\n`;\n\nexport const Title = styled.div`\n  color: white;\n  font-family: 'Staatliches', cursive;\n  font-size: 30px;\n  margin-bottom: 20px;\n  margin-top: 100px;\n  text-align: center;\n`;\n\nexport const Input = styled.input`\n  border: solid white 1px;\n  color: black;\n  height: 30px;\n  margin-left: 17%;\n  margin-bottom: 10px;\n  text-align: center;\n  width: 800px;\n`;\n\nexport const FilterLine = styled.div`\n  display: flexbox;\n  margin-left: 17%;\n  margin-bottom: 20px;\n  \n  select, option, input, button {\n    border: solid white 1px;\n    background-color: black;\n    color: white;\n    height: 30px;\n    text-align: center;\n    width: 200px;\n  };\n\n  input {\n    height: 25px;\n    padding-top: 2px;\n  }\n\n  button {\n    background-color: black;\n    color: white;\n    padding-top: 2px;\n  }\n\n  button:active {\n    background-color: white;\n    color: black;\n  }\n`;\n\nexport const LineFilter = styled.div`\n  color: white;\n  height: 30px;\n  margin-left: 17%;\n\n  p {\n    border: solid 1px white;\n    display: inline-block;\n    height: 25px;\n    padding-top: 5px;\n    text-align: center;\n    width: 200px;\n  };\n\n  button {\n    border: none;\n    background-color: #590e0c;\n    color: white;\n    height: 33px;\n    padding-bottom: 2px;\n    width: 200px;\n  };\n\n  button: active {\n    background-color: red;\n  }\n`;\n","import React, { useEffect, useContext } from 'react';\nimport { Context } from '../context/Provider';\nimport planetsFetch from '../services/Fetch';\nimport { TableStyled } from './Style';\n\nexport default function Table() {\n  const { planets, setPlanets, filterByName: { name: filtro } } = useContext(Context);\n\n  // const att = () => {\n  //   setPlanets(planets\n  //     .filter((plan) => plan.name.toLowerCase().includes(filtro.toLowerCase())));\n  // };\n\n  useEffect(() => {\n    planetsFetch()\n      .then(({ results }) => {\n        const data = results;\n        setPlanets(data);\n      });\n\n    // att();\n  }, [setPlanets]);\n\n  return (\n    <TableStyled>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Rotation period</th>\n          <th>Orbital Period</th>\n          <th>Diameter</th>\n          <th>Climate</th>\n          <th>Gravity</th>\n          <th>Terrain</th>\n          <th>Surface Water</th>\n          <th>Population</th>\n          <th>Films</th>\n          <th>Created</th>\n          <th>Edited</th>\n          <th>URL</th>\n        </tr>\n      </thead>\n      {\n        planets\n          .filter((plan) => plan.name.toLowerCase().includes(filtro.toLowerCase()))\n          .map((planet) => (\n            <tr key={ planet.name }>\n              <td>{ planet.name }</td>\n              <td>{ planet.rotation_period }</td>\n              <td>{ planet.orbital_period }</td>\n              <td>{ planet.diameter }</td>\n              <td>{ planet.climate }</td>\n              <td>{ planet.gravity }</td>\n              <td>{ planet.terrain }</td>\n              <td>{ planet.surface_water }</td>\n              <td>{ planet.population }</td>\n              <td>{ planet.films }</td>\n              <td>{ planet.created }</td>\n              <td>{ planet.edited }</td>\n              <td>{ planet.url }</td>\n            </tr>\n          ))\n      }\n    </TableStyled>\n  );\n}\n","import React from 'react';\nimport { Title } from './Style';\n\nexport default function Header() {\n  return (\n    <Title>\n      <h1>Star Wars Planets Search</h1>\n    </Title>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport { Context } from '../context/Provider';\nimport { Input, FilterLine, LineFilter } from './Style';\n\nexport default function FormInput() {\n  const { handleChange, handleFilter, planets, setPlanets, listFilter,\n    filterByNumericValues: [{ column, value, comparison }] } = useContext(Context);\n\n  const [options, attOptions] = useState([\n    'population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water']);\n\n  const onClickFilter = () => {\n    listFilter.push({ column, value, comparison });\n\n    if (comparison === 'maior que') {\n      setPlanets(planets.filter((planet) => planet[column] > +value));\n    }\n    if (comparison === 'menor que') {\n      setPlanets(planets.filter((planet) => planet[column] < +value));\n    }\n    if (comparison === 'igual a') {\n      setPlanets(planets.filter((planet) => planet[column] === value));\n    }\n\n    attOptions(options.filter((opt) => opt !== column));\n  };\n\n  return (\n    <form>\n      <Input\n        data-testid=\"name-filter\"\n        placeholder=\"Planeta\"\n        onChange={ handleChange }\n      />\n\n      <FilterLine>\n        <select name=\"column\" data-testid=\"column-filter\" onChange={ handleFilter }>\n          {\n            options.map((opt) => <option key={ opt }>{ opt }</option>)\n          }\n\n        </select>\n\n        <select\n          data-testid=\"comparison-filter\"\n          name=\"comparison\"\n          onChange={ handleFilter }\n        >\n          <option>maior que</option>\n          <option>menor que</option>\n          <option>igual a</option>\n        </select>\n\n        <input\n          type=\"number\"\n          placeholder=\"valor\"\n          name=\"numero\"\n          data-testid=\"value-filter\"\n          onChange={ handleFilter }\n          value={ value }\n        />\n        <button type=\"button\" data-testid=\"button-filter\" onClick={ onClickFilter }>\n          Filtrar\n        </button>\n      </FilterLine>\n\n      {\n        listFilter !== [] && (\n          listFilter.map((filter) => (\n            <LineFilter key={ filter.column }>\n              <p>{ filter.column }</p>\n              <p>{ filter.comparison }</p>\n              <p>{ filter.value }</p>\n              <button type=\"button\">X</button>\n            </LineFilter>\n          ))\n        )\n      }\n    </form>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport Table from './components/Table';\nimport Header from './components/Header';\nimport Provider from './context/Provider';\nimport FormInput from './components/Form-Input';\n\nfunction App() {\n  return (\n    <Provider>\n      <Header />\n      <FormInput />\n      <Table />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}